name: "Lua Builder"

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
    source_build:
        name: Build
        runs-on: ${{ matrix.os }}
        container: ${{ matrix.container }}
        strategy:
          fail-fast: false
          matrix:
            os: [ubuntu-latest, windows-latest]
            include:
              - os: ubuntu-latest
                container: registry.gitlab.steamos.cloud/steamrt/sniper/sdk
        steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
              path: lua
              submodules: recursive
          - name: Build - Linux
            if: matrix.os == 'ubuntu-latest'
            working-directory: lua
            shell: bash
            run: |
              sudo apt update
              sudo apt install -y libreadline-dev

              cmake -B build
              cmake --build build
          - name: Build - Windows
            if: matrix.os == 'windows-latest'
            working-directory: lua
            run: |
              cmake -B build
              cmake --build build --config Release

          - name: Upload Artifacts Linux
            if: matrix.os == 'ubuntu-latest'
            uses: actions/upload-artifact@v4
            with:
              name: Swiftly.Lua.Linux
              path: ${{ github.workspace }}/lua/build/liblua.a

          - name: Upload Headers
            if: matrix.os == 'ubuntu-latest'
            uses: actions/upload-artifact@v4
            with:
              name: Swiftly.Lua.Headers
              path: ${{ github.workspace }}/lua/*.h
                
          - name: Upload Artifacts Windows
            if: matrix.os == 'windows-latest'
            uses: actions/upload-artifact@v4
            with:
              name: Swiftly.Lua.Windows
              path: ${{ github.workspace }}/lua/build/Release/lua.lib